.. _hierarchy:

Settings hierarchy
==================

Introduction
------------

GeoNetwork stores configuration settings in the Settings table.
The settings are organized into a 'tree' structure where the leaf nodes of the tree are key/value pairs.

A key is limited to 64 characters whilst a value is effectively unlimited in most databases supported by GeoNetwork. 

The root of the tree contains two nodes:

- **system**: contains nodes that describe system configuration settings
- **harvesting**:  contains nodes that describe the settings used by harvesters

In the following sections: 

- the indentation is used to show hierarchy
- names in **bold** represent keys
- the datatype of the value is shown in parenthesis after the key. 

 - an *italic* font is used to indicate types: string, integer, boolean, enumerated (values separated by a '|' represent the set of allowed values).
 - a missing datatype means that the value of the node is not used. 

- square brackets indicate cardinality. If they are missing, a cardinality of \[1..1] should be inferred.

The system hierarchy
--------------------

Some examples of system configuration settings nodes are:

- **system**: information on system configuration settings

 - **site**: Contains information about the site

  - **name** (*string*): Name used to present this
    site to other sites. Used to fill comboboxes or lists.
  - **organisation** (*string*): Name of the
    organization/company/institute that is running GeoNetwork
  - **siteId** (*string*): A UUID that uniquely
    identifies the site. It is generated by the installer.

 - **platform**: Contains information about the current software version

  - **version** (*string*): GeoNetwork’s version in
    the X.Y.Z format
  - **subVersion** (*string*): A small extra description
    about the version, like ’alpha-1’, ’beta’ etc...

 - **server**: Used when it is necessary to build absolute URLs to the
   GeoNetwork server. This is the case, for example, when creating links inside
   a metadata record or when providing CSW capabilities.

  - **host** (*string*): HTTP server address
  - **port** (*integer*): HTTP server port (can be empty which means port 80)

 - **Intranet**: specify the network address details of the Intranet

  - **network** (*string*): Intranet address
  - **netmask** (*string*): Intranet netmask

 - **z3950**: A container for Z39.50 server parameters

  - **enable** (*boolean*): If true, GeoNetwork will
    start the Z30.50 server
  - **port** (*integer*): The port opened by
    GeoNetwork to listen to Z39.50 requests. Usually 2100.

 - **proxy**: This container specifies the proxy configuration for GeoNetwork to use when making outgoing connections

  - **use** (*boolean*): If true, GeoNetwork will use
    the given proxy for outgoing connections
  - **host** (*string*): Proxy host name
  - **port** (*integer*): Proxy host port
  - **username** (*string*): Proxy credentials.
  - **password** (*string*): Proxy credentials.

 - **feedback**: email messages sent via web feedback form or when downloading a
   resource.

  - **email** (*string*): email address of person who will receive feedback
  - **mailServer**: This container configures the mail server that will
    be used to send email

    - **host** (*string*): Address of the SMTP server to use
    - **port** (*string*): SMTP port on server to use

 - **removedMetadata**: This container contains settings about removed metadata.

  - **dir**: This folder will contain removed metadata in MEF format. It
    gets populated when the user deletes a metadata using the web
    interface.

 - **LDAP**: Parameters for LDAP authentication by GeoNetwork

  - **use** (*boolean*): If true, GeoNetwork will use LDAP authentication for usernames and passwords
  - **host** (*string*): LDAP host
  - **port** (*integer*): Port number on LDAP host
  - **defaultProfile** (*string*): Default
    GeoNetwork profile to use when the profile user attribute does not
    exist in the LDAP attributes.
  - **login** - optional credentials used to obtain access to the LDAP service

    - **userDN** (*string*)
    - **password** (*string*)

  - **distinguishedNames** - optional LDAP info used by GeoNetwork to locate user credentials

    - **base** (*string*)
    - **users** (*string*)

  - **userAttribs**: A container for user attributes present into the
    LDAP directory that must be retrieved and used to create the user in
    GeoNetwork.

    - **name** (*string*)
    - **password** (*string*)
    - **profile** (*string*)

Harvesting nodes
----------------

All harvesters share a common set of containers, which are retrieved by the 
harvesting engine for all harvesters:

- **harvesting**

 - **node** \[0..n] (*string*): Type of harvesting node

   - **site**: A container for site information.

     - **name** (*string*): Name of harvest instance (shown in the harvester user interface).
     - **uuid** (*string*): A unique identifier assigned
       by the system when the harvesting node is created.
     - **useAccount** (*boolean*): Indicates if the
       harvester has to authenticate to access the data.

       - **username** (*string*): credentials to be used for authentication
       - **password** (*string*): credentials to be used for authentication

   - **options**:

     - **every** (*string*): Harvesting schedule - similar to the Unix CRON format
     - **oneRunOnly** (*boolean*): If true, the harvester
       will harvest just once and then it will set the status
       to inactive.
     - **status** (*active|inactive*): Indicates if the harvesting from this
       node is stopped (inactive) or if the harvester is waiting for the
       next scheduled harvest (active).

   - **privileges** \[0..1]: This is a container for privileges to assign to each
     harvested metadata record

     - **group** (*integer*) \[0..n]: A local
       group. The value is the local identifier of the group. There can be
       several group nodes each with its own set of privileges.

       - **operation** (*integer*) \[0..n]:
         Privilege to assign to the group. The value is the
         numeric id of the operation like 0=view, 1=download, 2=edit
         etc...

   - **categories** \[0..1]: This is a container for categories to assign to each
     harvested metadata

     - **category** (*integer*) \[0..n]: A local
       category. The value is the local identifier of the category.

   - **info**: Container for status information about harvesting from this node.

     - **lastRun** (*string*): When
       the harvester was last run. The value is the current
       time in milliseconds since 1 January, 1970. If empty then the harvester
			 has not yet been run.


In the following examples, the common harvesting settings described above
will not be shown. Instead, only the additional information specific to the 
harvesting type will be described.

Nodes of type geonetwork
````````````````````````

This is the native harvesting supported by GeoNetwork 2.1 and above.

 - **node** (*string*): geonetwork

   - **site**: Contains host and account information

     - **host** (*string*)
     - **port** (*integer*)
     - **servlet** (*string*)

   - **search** \[0..n]: Contains the search parameters. If this element is
     missing, an unconstrained search will be performed.

     - **freeText** (*string*)
     - **title** (*string*)
     - **abstract** (*string*)
     - **keywords** (*string*)
     - **digital** (*boolean*)
     - **hardcopy** (*boolean*)
     - **source** (*string*)

   - **groupsCopyPolicy** \[0..n]: Represents a copy policy for a remote group.
     It is used to maintain remote privileges on harvested metadata.

     - **name** (*string*): Internal name (not
       localised) of a remote group.
     - **policy** (*string*): Copy policy. For the
       group all, policies are: copy, copyToIntranet. For all other
       groups, policies are: copy, createAndCopy. The Intranet group is
       not considered.

Nodes of type webdav
````````````````````

This harvester type is capable of connecting to a web server which is WebDAV
enabled.

 - **node** (*string*): webdav

   - **site**: Contains the URL to connect to and account information

     - **url** (*string*): URL to connect to. Must be
       well formed, starting with ``http://``, ``file://`` or a supported
       protocol.
     - **icon** (*string*): This is the icon that
       will be used as the metadata source logo. The image is taken
       from the ``images/harvesting`` folder and copied to the ``images/logos``
       folder.

   - **options**

     - **recurse** (*boolean*): Indicates if the
       remote folder must be recursively scanned for metadata.
     - **validate** (*boolean*): If set, the
       harvester will validate the metadata against its schema and the
       metadata will be harvested only if it is valid.

Nodes of type csw
`````````````````

This harvester type is capable of querying an OGC Catalogue Services for the
Web (CSW) server and harvesting metadata.

 - **node** (*string*): csw

   - **site**

     - **capabUrl** (*string*): URL of the
       GetCapabilities statement. This will be used to retrieve the operations
       and server address.
     - **icon** (*string*): This is the icon that
       will be used as the metadata source logo. The image is taken
       from the ``images/harvesting`` folder and copied to the ``images/logos``
       folder.

   - **search** \[0..n]: Contains search parameters. If this element is
     missing, an unconstrained search will be performed.

     - **freeText** (*string*)
     - **title** (*string*)
     - **abstract** (*string*)
     - **subject** (*string*)


